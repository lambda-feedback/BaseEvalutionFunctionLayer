name: Build and Push AWS Lambda Base Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]

    env:
      SCHEMAS_URL: https://raw.githubusercontent.com/lambda-feedback/request-response-schemas/master

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          python -m pip install -r requirements.txt

      - name: Run linter
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests
        run: |
          pytest -v tests/*.py

  push_to_registry:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            suffix=-${{ matrix.python-version }}
          tags: |
            type=ref,event=branch
            type=raw,value=${{ github.ref_name }}
            type=raw,value=latest,suffix=,enable=${{ github.ref_name == github.event.repository.default_branch }}
          images: |
            name=${{ secrets.DOCKER_USERNAME }}/python-base-eval-layer,enable=false
            name=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
  
      - name: Build and Push Base Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
            INVOKER_ID=${{ secrets.INVOKER_ID }}
            INVOKER_KEY=${{ secrets.INVOKER_KEY }}
            INVOKER_REGION=${{ secrets.INVOKER_REGION }}
  
    # name: Build and Push to DockerHub Registry
    # runs-on: ubuntu-latest

    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2

    #   - name: Log in to Docker Hub
    #     uses: docker/login-action@v1
    #     with:
    #       username: ${{ secrets.DOCKER_USERNAME }}
    #       password: ${{ secrets.DOCKER_PASSWORD }}

    #   - name: Build and Push Base Image
    #     uses: docker/build-push-action@v2
    #     with:
    #       push: true
    #       tags: ${{ secrets.DOCKER_USERNAME }}/python-base-eval-layer
    #       build-args: |
    #         INVOKER_ID=${{ secrets.INVOKER_ID }}
    #         INVOKER_KEY=${{ secrets.INVOKER_KEY }}
    #         INVOKER_REGION=${{ secrets.INVOKER_REGION }}
